services:
    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        container_name: mpstme-pics-backend
        restart: unless-stopped
        ports:
          - "3001:3001"
        # depends_on:
        #     - db
        env_file:
            - ./backend/.env
        command: ["sh", "-c", "npx drizzle-kit migrate && npm run start"]
        networks:
            - mpstme-pics-network

    # db:
    #     image: bitnami/postgresql
    #     container_name: mpstme-pics-db
    #     restart: unless-stopped
    #     ports:
    #         - "5432:5432"
    #     environment:
    #         POSTGRES_USER: postgres
    #         POSTGRES_PASSWORD: postgres
    #         POSTGRES_DB: mpstme_pics
    #     volumes:
    #         - postgres_data:/var/lib/postgresql/data

    redis:
        image: bitnami/redis:latest
        container_name: mpstme-pics-redis
        restart: unless-stopped
        expose:
          - "6379"
        volumes:
            - redis_data:/data
        environment:
            ALLOW_EMPTY_PASSWORD: "yes"
        networks:
            - mpstme-pics-network

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
            args:
                NEXT_PUBLIC_API_URL: https://backend.mpstme.pics
        container_name: mpstme-pics-frontend
        restart: unless-stopped
        ports:
            - "3000:3000"
        environment:
            - NEXT_PUBLIC_API_URL=https://backend.mpstme.pics
        networks:
            - mpstme-pics-network
        command: ["npm", "start"]
    
    # watchtower:
    #     image: containrrr/watchtower
    #     volumes:
    #     - /var/run/docker.sock:/var/run/docker.sock
    #     - /home/.docker/config.json:/config.json
    #     command: --interval 30

volumes:
    # postgres_data:
    redis_data:

networks:
  mpstme-pics-network:
    driver: bridge